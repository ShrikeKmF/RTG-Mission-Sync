#include "details.hpp"

// Respawn System
respawnOnStart = 0;
respawn = 3;
respawnDelay = 360;
respawnTemplates[] = {"MenuPosition"};


// Chat
disabledAI = 1;
disableChannels[]={2,4,5};

wreckManagerMode = 0;
corpseManagerMode = 3;
corpseLimit = 25;
corpseRemovalMinTime = 1200;
corpseRemovalMaxTime = 1200;
minPlayerDistance = 600; 

saving = 0;

enableDebugConsole = 1;
cba_settings_hasSettingsFile = 1;

// Prevent naughty compositions from executing unwanted code.
zeusCompositionScriptLevel = 0;
allowProfileGlasses = 1;

// https://community.bistudio.com/wiki/Description.ext#showHUD
showHUD[] =
{
	1,	// Scripted HUD (same as showHUD command)
	1,	// Vehicle and unit info
	0,	// Vehicle radar [HIDDEN]
	0,	// Vehicle compass [HIDDEN]
	1,	// Tank direction indicator
	1,	// Commanding menu
	1,	// Group info bar
	1,	// HUD weapon cursors
	1,	// Vehicle display panels
	1,	// "x killed by y" systemChat messages
	1	// force show drawIcon3D icons
};


//To Enable: #ace-fortify blufor RTG
class ACEX_Fortify_Presets {
	class RTG {
		objects[] = {
			{"Land_BagFence_Short_F", 5},
			{"Land_BagFence_Long_F", 5},
			{"Land_BagFence_Round_F", 5},
			{"Land_HBarrier_1_F", 5},
			{"Land_HBarrier_3_F", 5},
			{"Land_HBarrier_5_F", 5},
			{"Land_Plank_01_4m_F", 5},
			{"Land_Plank_01_8m_F", 5},
			{"Land_Razorwire_F", 5},
			{"Land_BarGate_F", 5},
			{"Land_WiredFence_01_gate_F", 5}
		};
	};
};

class CfgFunctions
{
	class VC_StaticLine
	{
		class Standing
		{
			class standUp {file = "functions\fnc_standUp.sqf";};
			class sitDown {file = "functions\fnc_sitDown.sqf";};
		};
		
	};
};

#include "UI\BaseControls.hpp"
#include "UI\RscDisplayName.hpp"

class RoleSelectorDialog : RscDisplayName {
    idd = 9100;
    movingEnable = 0;
    enableSimulation = 1;
    onLoad = "uiNamespace setVariable ['RoleSelectorDialog', _this select 0]";

    #define DIALOG_X (safeZoneX + (safeZoneW - 90 * pixelGrid * pixelW) / 2)
    #define DIALOG_Y (safeZoneY + (safeZoneH - 60 * pixelGrid * pixelH) / 2)

    class controlsBackground {
        // Main background
        class MainBackground: RscText {
            idc = -1;
            x = DIALOG_X + 0 * pixelGrid * pixelW; y = DIALOG_Y + 0 * pixelGrid * pixelH;
            w = 90 * pixelGrid * pixelW; h = 60 * pixelGrid * pixelH;
            colorBackground[] = {0,0,0,0.7};
        };
        // Frames for each section
        class KitFrame: RscFrame {
            idc = -1;
            x = DIALOG_X + 2 * pixelGrid * pixelW; y = DIALOG_Y + 2 * pixelGrid * pixelH;
            w = 16 * pixelGrid * pixelW; h = 56 * pixelGrid * pixelH;
        };
        class RoleListFrame: RscFrame {
            idc = -1;
            x = DIALOG_X + 20 * pixelGrid * pixelW; y = DIALOG_Y + 2 * pixelGrid * pixelH;
            w = 36 * pixelGrid * pixelW; h = 56 * pixelGrid * pixelH;
        };
        class DescFrame: RscFrame {
            idc = -1;
            x = DIALOG_X + 58 * pixelGrid * pixelW; y = DIALOG_Y + 2 * pixelGrid * pixelH;
            w = 28 * pixelGrid * pixelW; h = 56 * pixelGrid * pixelH;
        };
    };

    class controls {
        // --- Kitset buttons (vertical stack)
        class BtnLight: RscButton {
            idc = 2000;
            text = "Light";
            x = DIALOG_X + 4 * pixelGrid * pixelW; y = DIALOG_Y + 6 * pixelGrid * pixelH;
            w = 12 * pixelGrid * pixelW; h = 8 * pixelGrid * pixelH;
            colorBackground[]        = {0,0.8,0,0.7};
            colorBackgroundActive[]  = {0,1,0,0.9};
            colorFocused[]           = {0.5,1,0.5,0.9};
            action = "['Light_Kits'] execVM 'UI\RoleSelectUI\setActiveKit.sqf'";
        };
        class BtnMedium: RscButton {
            idc = 2001;
            text = "Medium";
            x = DIALOG_X + 4 * pixelGrid * pixelW; y = DIALOG_Y + 16 * pixelGrid * pixelH;
            w = 12 * pixelGrid * pixelW; h = 8 * pixelGrid * pixelH;
            colorBackground[]        = {1,0.5,0,0.7};
            colorBackgroundActive[]  = {1,0.7,0,0.9};
            colorFocused[]           = {1,0.8,0.5,0.9};
            action = "['Medium_Kits'] execVM 'UI\RoleSelectUI\setActiveKit.sqf'";
        };
        class BtnHeavy: RscButton {
            idc = 2002;
            text = "Heavy";
            x = DIALOG_X + 4 * pixelGrid * pixelW; y = DIALOG_Y + 26 * pixelGrid * pixelH;
            w = 12 * pixelGrid * pixelW; h = 8 * pixelGrid * pixelH;
            colorBackground[]        = {0.8,0,0,0.7};
            colorBackgroundActive[]  = {1,0,0,0.9};
            colorFocused[]           = {1,0.5,0.5,0.9};
            action = "['Heavy_Kits'] execVM 'UI\RoleSelectUI\setActiveKit.sqf'";
        };
        class BtnWeapons: RscButton {
            idc = 3000;
            text = "Weapons: OFF";
            x = DIALOG_X + 4 * pixelGrid * pixelW; y = DIALOG_Y + 36 * pixelGrid * pixelH;
            w = 12 * pixelGrid * pixelW; h = 8 * pixelGrid * pixelH;
            action = "[] execVM 'UI\RoleSelectUI\onWeaponSwap.sqf'";
        };

        // --- Role list (center)
        class RoleList: RscListbox {
            idc = 1500;
            x = DIALOG_X + 22 * pixelGrid * pixelW; y = DIALOG_Y + 6 * pixelGrid * pixelH;
            w = 32 * pixelGrid * pixelW; h = 48 * pixelGrid * pixelH;
            onLBSelChanged = "_this execVM 'UI\RoleSelectUI\onRoleSelect.sqf'";
        };

        // --- Description box (right)
        class DescBox: RscStructuredText {
            idc = 1600;
            x = DIALOG_X + 60 * pixelGrid * pixelW; y = DIALOG_Y + 6 * pixelGrid * pixelH;
            w = 24 * pixelGrid * pixelW; h = 48 * pixelGrid * pixelH;
            text = "Select a role to see its description.";
            sizeEx = 2 * pixelGrid * pixelH;
        };

        // --- Select button (bottom center of description box)
        class SelectBtn: RscButton {
            idc = 1700;
            text = "Select Role";
            w = 14 * pixelGrid * pixelW; h = 6 * pixelGrid * pixelH;
            x = DIALOG_X + 60 * pixelGrid * pixelW + (24 * pixelGrid * pixelW - 14 * pixelGrid * pixelW) / 2;
            y = DIALOG_Y + 6 * pixelGrid * pixelH + 42 * pixelGrid * pixelH + 2 * pixelGrid * pixelH;
            colorBackground[]        = {0.3,0.3,0.3,0.7};
            colorBackgroundActive[]  = {0.5,0.5,0.5,0.9};
            colorFocused[]           = {0.6,0.6,0.6,0.9};
            action = "[] execVM 'UI\RoleSelectUI\confirmRoleSelect.sqf'";
        };
    };
};

class RscTitles
{
    class RoleArsenalHUD
    {
        idd = -1;
        duration = 1e+10;
        fadein = 0;
        fadeout = 0;
        movingEnable = 0;
        enableSimulation = 1;
        onLoad = "uiNamespace setVariable ['RoleArsenalHUD', _this select 0]";
        onUnload = "uiNamespace setVariable ['RoleArsenalHUD', displayNull]";

        class controls
        {
            class RoleHUDText: RscStructuredText
            {
                idc = 1801;
                text = "No Role Selected";
                w = 28 * pixelGrid * pixelW;
                h = 5  * pixelGrid * pixelH;
                x = safeZoneX + (safeZoneW - (28 * pixelGrid * pixelW)) / 2;
                y = safeZoneY + 2 * pixelGrid * pixelH; // Move to top
                colorText[] = {1,1,1,1};
                sizeEx = 3.5 * pixelGrid * pixelH;
                shadow = 1;
            };
        };
    };
};

class VehicleSpawnDialog : RscDisplayName {
    idd = 8000;
    movingEnable = 0;
    enableSimulation = 1;
    onLoad = "uiNamespace setVariable ['VehicleSpawnDialog', _this select 0]";

    #define DIALOG_X (safeZoneX + (safeZoneW - 70 * pixelGrid * pixelW) / 2)
    #define DIALOG_Y (safeZoneY + (safeZoneH - 45 * pixelGrid * pixelH) / 2)

    class controlsBackground {
        class MainBackground: RscText {
            idc = -1;
            x = DIALOG_X;
            y = DIALOG_Y;
            w = 70 * pixelGrid * pixelW;
            h = 45 * pixelGrid * pixelH;
            colorBackground[] = {0,0,0,0.7};
        };
        class Frame: RscFrame {
            idc = -1;
            x = DIALOG_X + 2 * pixelGrid * pixelW;
            y = DIALOG_Y + 2 * pixelGrid * pixelH;
            w = 66 * pixelGrid * pixelW;
            h = 41 * pixelGrid * pixelH;
        };
    };

    class controls {
        class VehicleText: RscText {
            text = "Select Vehicle:";
            x = DIALOG_X + 4 * pixelGrid * pixelW;
            y = DIALOG_Y + 6 * pixelGrid * pixelH;
            w = 28 * pixelGrid * pixelW;
            h = 4 * pixelGrid * pixelH;
        };
        class VehicleCombo: RscCombo {
            idc = 8001;
            x = DIALOG_X + 4 * pixelGrid * pixelW;
            y = DIALOG_Y + 10 * pixelGrid * pixelH;
            w = 62 * pixelGrid * pixelW;
            h = 5 * pixelGrid * pixelH;
        };

        class SpawnText: RscText {
            text = "Select Spawn Point:";
            x = DIALOG_X + 4 * pixelGrid * pixelW;
            y = DIALOG_Y + 18 * pixelGrid * pixelH;
            w = 28 * pixelGrid * pixelW;
            h = 4 * pixelGrid * pixelH;
        };
        class SpawnCombo: RscCombo {
            idc = 8002;
            x = DIALOG_X + 4 * pixelGrid * pixelW;
            y = DIALOG_Y + 22 * pixelGrid * pixelH;
            w = 62 * pixelGrid * pixelW;
            h = 5 * pixelGrid * pixelH;
        };

        class LoadoutText: RscText {
            text = "Select Loadout:";
            x = DIALOG_X + 4 * pixelGrid * pixelW;
            y = DIALOG_Y + 30 * pixelGrid * pixelH;
            w = 28 * pixelGrid * pixelW;
            h = 4 * pixelGrid * pixelH;
        };
        class LoadoutCombo: RscCombo {
            idc = 8003;
            x = DIALOG_X + 4 * pixelGrid * pixelW;
            y = DIALOG_Y + 34 * pixelGrid * pixelH;
            w = 62 * pixelGrid * pixelW;
            h = 5 * pixelGrid * pixelH;
        };

        class ConfirmButton: RscButton {
            idc = 8010;
            text = "Spawn Vehicle";
            x = DIALOG_X + (70 * pixelGrid * pixelW - 20 * pixelGrid * pixelW) / 2;
            y = DIALOG_Y + 40 * pixelGrid * pixelH;
            w = 20 * pixelGrid * pixelW;
            h = 5 * pixelGrid * pixelH;
            colorBackground[]        = {0.3,0.3,0.3,0.7};
            colorBackgroundActive[]  = {0.5,0.5,0.5,0.9};
            colorFocused[]           = {0.6,0.6,0.6,0.9};
            action = "[] call fnc_spawnVehicle";
        };
    };
};
